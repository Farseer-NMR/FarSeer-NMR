from PyQt5 import QtCore
from PyQt5.QtWidgets import QDialog, QGridLayout, QLabel, QSpinBox, QLineEdit, QCheckBox, QDoubleSpinBox, QDialogButtonBox
from gui.components.LabelledCombobox import LabelledCombobox
from gui.components.LabelledCheckbox import LabelledCheckbox
from gui.components.LabelledDoubleSpinBox import LabelledDoubleSpinBox
from gui.components.LabelledSpinBox import LabelledSpinBox
from gui.components.LabelledLineEdit import LabelledLineEdit
from gui.components.ColourBox import ColourBox
from gui.components.FontComboBox import FontComboBox

import json
from current.default_config import defaults

class ResidueEvolutionPopup(QDialog):

    def __init__(self, parent=None, vars=None, **kw):
        super(ResidueEvolutionPopup, self).__init__(parent)
        self.setWindowTitle("Residue Evolution Plot")
        grid = QGridLayout()
        grid.setAlignment(QtCore.Qt.AlignTop)
        self.setLayout(grid)
        self.vars = None
        if vars:
            self.vars = vars["res_evo_settings"]
        self.default = defaults["res_evo_settings"]

        self.res_evo_cols = LabelledSpinBox(self, text="Columns Per Page")
        self.res_evo_rows = LabelledSpinBox(self, text="Rows Per Page")
        self.res_evo_title_y = LabelledDoubleSpinBox(self, "Y Title Size")
        self.res_evo_font_size = LabelledSpinBox(self, "Title Font Size")
        self.res_evo_font = FontComboBox(self, text="Title Font")
        self.set_x_values = LabelledCheckbox(self, "Use User Defined X Values?")
        self.x_label_font = FontComboBox(self, text="X Label Font Size")
        self.x_label_font_size = LabelledSpinBox(self, text="X Label Font Size")
        self.x_label_padding = LabelledSpinBox(self, text="X Label Padding")
        self.x_label_font_weight = LabelledCombobox(self, text="X Label Font Weight", items=['bold', 'normal'])
        self.x_tick_font = FontComboBox(self, text="X Tick Font Size")
        self.x_tick_font_size = LabelledSpinBox(self, text="X Tick Font Size")
        self.x_tick_padding = LabelledSpinBox(self, text="X Tick Padding")
        self.x_tick_font_weight = LabelledCombobox(self, text="X Tick Font Weight", items=['bold', 'normal'])
        self.y_label_font = FontComboBox(self, text="Y Label Font Size")
        self.y_label_font_size = LabelledSpinBox(self, text="Y Label Font Size")
        self.y_label_padding = LabelledSpinBox(self, text="Y Label Padding")
        self.y_label_font_weight = LabelledCombobox(self, text="Y Label Font Weight", items=['bold', 'normal'])
        self.y_tick_padding = LabelledSpinBox(self, text="Y Label Padding")
        self.y_tick_font_size = LabelledSpinBox(self, text="Y Label Font Size")
        self.res_evo_plot_colour = ColourBox(self, text="Plot Colour")
        self.res_evo_plot_line_style = LabelledCombobox(self, text="Plot Line Style", items=['-', '--', '-.', ':'])
        self.res_evo_plot_marker_style = LabelledCombobox(self, text="Plot Line Style", items=['-', '--', '-.', ':'])
        self.res_evo_plot_marker_colour = ColourBox(self, text='Marker Colour')
        self.res_evo_plot_marker_size = LabelledSpinBox(self, 'Marker Size')
        self.res_evo_plot_line_width = LabelledSpinBox(self, 'Line Width')
        self.res_evo_plot_fill_between = LabelledCheckbox(self, text="Draw Data Shade")
        self.res_evo_plot_fill_colour = ColourBox(self, text="Shade Colour")
        self.res_evo_fill_alpha = LabelledSpinBox(self, text="Shade Transparency")
        self.res_evo_fit_line_colour = ColourBox(self, text="Fit Line Colour")
        self.res_evo_fit_line_width = LabelledSpinBox(self, text="Fit Line Width")

        self.layout().addWidget(self.res_evo_cols, 0, 0)
        self.layout().addWidget(self.res_evo_rows, 1, 0)
        self.layout().addWidget(self.res_evo_title_y, 2, 0)
        self.layout().addWidget(self.res_evo_font_size, 3, 0)
        self.layout().addWidget(self.res_evo_font, 4, 0)
        self.layout().addWidget(self.set_x_values, 5, 0)
        self.layout().addWidget(self.x_label_font, 6, 0)
        self.layout().addWidget(self.x_label_font_size, 7, 0)
        self.layout().addWidget(self.x_label_padding, 8, 0)
        self.layout().addWidget(self.x_label_font_weight, 9, 0)
        self.layout().addWidget(self.x_tick_font, 10, 0)
        self.layout().addWidget(self.x_tick_font_size, 0, 1)
        self.layout().addWidget(self.x_tick_padding, 1, 1)
        self.layout().addWidget(self.x_tick_font_weight, 2, 1)
        self.layout().addWidget(self.y_label_font, 3, 1)
        self.layout().addWidget(self.y_label_font_size, 4, 1)
        self.layout().addWidget(self.y_label_padding, 5, 1)
        self.layout().addWidget(self.y_label_font_weight, 6, 1)
        self.layout().addWidget(self.y_tick_padding, 7, 1)
        self.layout().addWidget(self.y_tick_font_size, 8, 1)
        self.layout().addWidget(self.res_evo_plot_colour, 9, 1)
        self.layout().addWidget(self.res_evo_plot_line_style, 0, 2)
        self.layout().addWidget(self.res_evo_plot_marker_style, 1, 2)
        self.layout().addWidget(self.res_evo_plot_marker_colour, 2, 2)
        self.layout().addWidget(self.res_evo_plot_marker_size, 3, 2)
        self.layout().addWidget(self.res_evo_plot_line_width, 4, 2)
        self.layout().addWidget(self.res_evo_plot_fill_between, 5, 2)
        self.layout().addWidget(self.res_evo_plot_fill_colour, 6, 2)
        self.layout().addWidget(self.res_evo_fill_alpha, 7, 2)
        self.layout().addWidget(self.res_evo_fit_line_colour, 8, 2)
        self.layout().addWidget(self.res_evo_fit_line_width, 9, 2)

        self.buttonBox = QDialogButtonBox(QDialogButtonBox.Ok | QDialogButtonBox.Cancel | QDialogButtonBox.RestoreDefaults)

        self.buttonBox.accepted.connect(self.set_values)
        self.buttonBox.rejected.connect(self.reject)
        self.buttonBox.button(QDialogButtonBox.RestoreDefaults).clicked.connect(self.get_defaults)

        self.layout().addWidget(self.buttonBox, 10, 0, 1, 2)

        if vars:
            self.get_values()

    def get_defaults(self):
        self.res_evo_cols.field.setValue(self.default["res_evo_cols_page"])
        self.res_evo_rows.field.setValue(self.default["res_evo_rows_page"])
        self.res_evo_title_y.field.setValue(self.default["res_evo_title_y"])
        self.res_evo_font.select(self.default["res_evo_title_fn"])
        self.res_evo_font_size.field.setValue(self.default["res_evo_title_fs"])
        self.x_label_font.select(self.default["res_evo_x_label"])
        self.set_x_values.checkBox.setChecked(self.default["res_evo_set_x_values"])
        self.x_label_font.select(self.default["res_evo_x_label_fn"])
        self.x_label_font_size.field.setValue(self.default["res_evo_x_label_fs"])
        self.x_label_padding.field.setValue(self.default["res_evo_x_label_pad"])
        self.x_label_font_weight.select(self.default["res_evo_x_label_weight"])
        self.x_tick_padding.field.setValue(self.default["res_evo_x_ticks_pad"])
        self.x_tick_font_size.field.setValue(self.default["res_evo_x_ticks_fs"])
        self.y_label_font.select(self.default["res_evo_y_label_fn"])
        self.y_label_font_size.field.setValue(self.default["res_evo_y_label_fs"])
        self.y_label_padding.field.setValue(self.default["res_evo_y_label_pad"])
        self.y_label_font_weight.select(self.default["res_evo_y_label_weight"])
        self.y_tick_padding.field.setValue(self.default["res_evo_y_ticks_pad"])
        self.y_tick_font_size.field.setValue(self.default["res_evo_y_ticks_fs"])
        self.res_evo_plot_line_style.select(self.default["res_evo_line_style"])
        self.res_evo_plot_colour.select(self.default["res_evo_plot_color"])
        self.res_evo_plot_marker_style.select(self.default["res_evo_marker_style"])
        self.res_evo_plot_colour.select(self.default["res_evo_marker_color"])
        self.res_evo_plot_marker_size.field.setValue(self.default["res_evo_marker_size"])
        self.res_evo_plot_line_width.field.setValue(self.default["res_evo_line_width"])
        self.res_evo_plot_fill_between.checkBox.setChecked(self.default["res_evo_fill_between"])
        self.res_evo_plot_fill_colour.select(self.default["res_evo_fill_color"])
        self.res_evo_fill_alpha.field.setValue(self.default["res_evo_fill_alpha"])
        self.res_evo_fit_line_colour.select(self.default["res_evo_fit_line_color"])
        self.res_evo_fit_line_width.field.setValue(self.default["res_evo_fit_line_width"])

    def set_values(self):
        self.vars["res_evo_cols_page"] = self.res_evo_cols.field.value()
        self.vars["res_evo_rows_page"] = self.res_evo_rows.field.value()
        self.vars["res_evo_title_y"] = self.res_evo_title_y.field.value()
        self.vars["res_evo_title_fn"] = self.res_evo_font.fields.currentText()
        self.vars["res_evo_title_fs"] = self.res_evo_font_size.field.value()
        self.vars["res_evo_x_label"] = self.x_label_font.fields.currentText()
        self.vars["res_evo_set_x_values"] = self.set_x_values.checkBox.isChecked()
        self.vars["res_evo_x_label_fn"] = self.x_label_font.fields.currentText()
        self.vars["res_evo_x_label_fs"] = self.x_label_font_size.field.value()
        self.vars["res_evo_x_label_pad"] = self.x_label_padding.field.value()
        self.vars["res_evo_x_label_weight"] = self.x_label_font_weight.fields.currentText()
        self.vars["res_evo_x_ticks_pad"] = self.x_tick_padding.field.value()
        self.vars["res_evo_x_ticks_fs"] = self.x_tick_font_size.field.value()
        self.vars["res_evo_y_label_fn"] = self.y_label_font.fields.currentText()
        self.vars["res_evo_y_label_fs"] = self.y_label_font_size.field.value()
        self.vars["res_evo_y_label_pad"] = self.y_label_padding.field.value()
        self.vars["res_evo_y_label_weight"] = self.y_label_font_weight.fields.currentText()
        self.vars["res_evo_y_ticks_pad"] = self.y_tick_padding.field.value()
        self.vars["res_evo_y_ticks_fs"] = self.y_tick_font_size.field.value()
        self.vars["res_evo_line_style"] = self.res_evo_plot_line_style.fields.currentText()
        self.vars["res_evo_plot_color"] = self.res_evo_plot_colour.fields.currentText()
        self.vars["res_evo_marker_style"] = self.res_evo_plot_marker_style.fields.currentText()
        self.vars["res_evo_marker_color"] = self.res_evo_plot_colour.fields.currentText()
        self.vars["res_evo_marker_size"] = self.res_evo_plot_marker_size.field.value()
        self.vars["res_evo_line_width"] = self.res_evo_plot_line_width.field.value()
        self.vars["res_evo_fill_between"] = self.res_evo_plot_fill_between.checkBox.isChecked()
        self.vars["res_evo_fill_color"] = self.res_evo_plot_fill_colour.fields.currentText()
        self.vars["res_evo_fill_alpha"] = self.res_evo_fill_alpha.field.value()
        self.vars["res_evo_fit_line_color"] = self.res_evo_fit_line_colour.fields.currentText()
        self.vars["res_evo_fit_line_width"] = self.res_evo_fit_line_width.field.value()
        vars["res_evo_settings"] = self.vars
        self.accept()

    def get_values(self):
        self.res_evo_cols.field.setValue(self.vars["res_evo_cols_page"])
        self.res_evo_rows.field.setValue(self.vars["res_evo_rows_page"])
        self.res_evo_title_y.field.setValue(self.vars["res_evo_title_y"])
        self.res_evo_font.select(self.vars["res_evo_title_fn"])
        self.res_evo_font_size.field.setValue(self.vars["res_evo_title_fs"])
        self.x_label_font.select(self.vars["res_evo_x_label"])
        self.set_x_values.checkBox.setChecked(self.vars["res_evo_set_x_values"])
        self.x_label_font.select(self.vars["res_evo_x_label_fn"])
        self.x_label_font_size.field.setValue(self.vars["res_evo_x_label_fs"])
        self.x_label_padding.field.setValue(self.vars["res_evo_x_label_pad"])
        self.x_label_font_weight.select(self.vars["res_evo_x_label_weight"])
        self.x_tick_padding.field.setValue(self.vars["res_evo_x_ticks_pad"])
        self.x_tick_font_size.field.setValue(self.vars["res_evo_x_ticks_fs"])
        self.y_label_font.select(self.vars["res_evo_y_label_fn"])
        self.y_label_font_size.field.setValue(self.vars["res_evo_y_label_fs"])
        self.y_label_padding.field.setValue(self.vars["res_evo_y_label_pad"])
        self.y_label_font_weight.select(self.vars["res_evo_y_label_weight"])
        self.y_tick_padding.field.setValue(self.vars["res_evo_y_ticks_pad"])
        self.y_tick_font_size.field.setValue(self.vars["res_evo_y_ticks_fs"])
        self.res_evo_plot_line_style.select(self.vars["res_evo_line_style"])
        self.res_evo_plot_colour.select(self.vars["res_evo_plot_color"])
        self.res_evo_plot_marker_style.select(self.vars["res_evo_marker_style"])
        self.res_evo_plot_colour.select(self.vars["res_evo_marker_color"])
        self.res_evo_plot_marker_size.field.setValue(self.vars["res_evo_marker_size"])
        self.res_evo_plot_line_width.field.setValue(self.vars["res_evo_line_width"])
        self.res_evo_plot_fill_between.checkBox.setChecked(self.vars["res_evo_fill_between"])
        self.res_evo_plot_fill_colour.select(self.vars["res_evo_fill_color"])
        self.res_evo_fill_alpha.field.setValue(self.vars["res_evo_fill_alpha"])
        self.res_evo_fit_line_colour.select(self.vars["res_evo_fit_line_color"])
        self.res_evo_fit_line_width.field.setValue(self.vars["res_evo_fit_line_width"])
